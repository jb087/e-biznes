# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET     /                                               controllers.HomeController.index
# An example controller showing how to use dependency injection
GET     /count                                          controllers.CountController.count
# An example controller showing how to write asynchronous code
GET     /message                                        controllers.AsyncController.message


GET     /categories                                     controllers.categories.CategoryController.getCategories
GET     /category/:categoryId                           controllers.categories.CategoryController.getCategoryById(categoryId: String)
#POST    /category                                       controllers.categories.CategoryController.createCategory
#PUT     /category/:categoryId                           controllers.categories.CategoryController.updateCategory(categoryId: String)
#DELETE  /category/:categoryId                           controllers.categories.CategoryController.deleteCategory(categoryId: String)

GET     /subcategories                                  controllers.categories.SubcategoryController.getSubcategories
GET     /subcategory/:subcategoryId                     controllers.categories.SubcategoryController.getSubcategoryById(subcategoryId: String)
#POST    /subcategory                                    controllers.categories.SubcategoryController.createSubcategory
#PUT     /subcategory/:subcategoryId                     controllers.categories.SubcategoryController.updateSubcategory(subcategoryId: String)
#DELETE  /subcategory/:subcategoryId                     controllers.categories.SubcategoryController.deleteSubcategory(subcategoryId: String)

GET     /baskets                                        controllers.basket.BasketController.getBaskets
GET     /basket/:basketId                               controllers.basket.BasketController.getBasketById(basketId: String)
#POST    /basket                                         controllers.basket.BasketController.createBasket
#PUT     /basket/:basketId                               controllers.basket.BasketController.updateBasket(basketId: String)
#DELETE  /basket/:basketId                               controllers.basket.BasketController.deleteBasket(basketId: String)

GET     /orderedProducts                                controllers.basket.OrderedProductsController.getOrderedProducts
GET     /orderedProduct/:orderedProductId               controllers.basket.OrderedProductsController.getOrderedProductById(orderedProductId: String)
#POST    /orderedProduct                                 controllers.basket.OrderedProductsController.createOrderedProduct
#PUT     /orderedProduct/:orderedProductId               controllers.basket.OrderedProductsController.updateOrderedProduct(orderedProductId: String)
#DELETE  /orderedProduct/:orderedProductId               controllers.basket.OrderedProductsController.deleteOrderedProduct(orderedProductId: String)

GET     /orders                                         controllers.orders.OrderController.getOrders
GET     /order/:orderId                                 controllers.orders.OrderController.getOrderById(orderId: String)
#POST    /order                                          controllers.orders.OrderController.createOrder
#PUT     /order/:orderId                                 controllers.orders.OrderController.updateOrder(orderId: String)
#DELETE  /order/:orderId                                 controllers.orders.OrderController.deleteOrder(orderId: String)

GET     /payments                                       controllers.orders.PaymentController.getPayments
POST    /payment                                        controllers.orders.PaymentController.createPayment
PUT     /payment/:paymentId                             controllers.orders.PaymentController.updatePayment(paymentId: String)
DELETE  /payment/:paymentId                             controllers.orders.PaymentController.deletePayment(paymentId: String)

GET     /shippingInformation                            controllers.orders.ShippingInformationController.getShippingInformation
POST    /shippingInformation                            controllers.orders.ShippingInformationController.createShippingInformation
PUT     /shippingInformation/:shippingInformationId     controllers.orders.ShippingInformationController.updateShippingInformation(shippingInformationId: String)
DELETE  /shippingInformation/:shippingInformationId     controllers.orders.ShippingInformationController.deleteShippingInformation(shippingInformationId: String)

GET     /opinions                                       controllers.products.OpinionController.getOpinions
GET     /opinion/:opinionId                             controllers.products.OpinionController.getOpinionById(opinionId: String)
#POST    /opinion                                        controllers.products.OpinionController.createOpinion
#PUT     /opinion/:opinionId                             controllers.products.OpinionController.updateOpinion(opinionId: String)
#DELETE  /opinion/:opinionId                             controllers.products.OpinionController.deleteOpinion(opinionId: String)

GET     /photos                                       controllers.products.PhotoController.getPhotos
GET     /photo/:photoId                                controllers.products.PhotoController.getPhotoById(photoId: String)
#POST    /photo                                        controllers.products.PhotoController.createPhoto
#PUT     /photo/:photoId                               controllers.products.PhotoController.updatePhoto(photoId: String)
#DELETE  /photo/:photoId                               controllers.products.PhotoController.deletePhoto(photoId: String)

GET     /products                                     controllers.products.ProductController.getProducts
GET     /product/:productId                           controllers.products.ProductController.getProductById(productId: String)
#POST    /product                                      controllers.products.ProductController.createProduct
#PUT     /product/:productId                           controllers.products.ProductController.updateProduct(productId: String)
#DELETE  /product/:productId                           controllers.products.ProductController.deleteProduct(productId: String)


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                                   controllers.Assets.versioned(path="/public", file: Asset)


#TODO remove endpoints below, when react implementation will be done

GET     /categoryCreate                                 controllers.categories.CategoryController.createCategory
POST    /categoryCreateHandler                          controllers.categories.CategoryController.createCategoryHandler
GET     /categoryDelete/:categoryId                     controllers.categories.CategoryController.deleteCategory(categoryId: String)
GET     /categoryUpdate/:categoryId                     controllers.categories.CategoryController.updateCategory(categoryId: String)
POST    /categoryUpdateHandler                          controllers.categories.CategoryController.updateCategoryHandler

GET     /subcategoryCreate                              controllers.categories.SubcategoryController.createSubcategory
POST    /subcategoryCreateHandler                       controllers.categories.SubcategoryController.createSubcategoryHandler
GET     /subcategoryDelete/:subcategoryId               controllers.categories.SubcategoryController.deleteSubcategory(subcategoryId: String)
GET     /subcategoryUpdate/:subcategoryId               controllers.categories.SubcategoryController.updateSubcategory(subcategoryId: String)
POST    /subcategoryUpdateHandler                       controllers.categories.SubcategoryController.updateSubcategoryHandler

GET     /productCreate                                  controllers.products.ProductController.createProduct
POST    /productCreateHandler                           controllers.products.ProductController.createProductHandler
GET     /productDelete/:productId                       controllers.products.ProductController.deleteProduct(productId: String)
GET     /productUpdate/:productId                       controllers.products.ProductController.updateProduct(productId: String)
POST    /productUpdateHandler                           controllers.products.ProductController.updateProductHandler

GET     /opinionCreate                                  controllers.products.OpinionController.createOpinion
POST    /opinionCreateHandler                           controllers.products.OpinionController.createOpinionHandler
GET     /opinionUpdate/:opinionId                       controllers.products.OpinionController.updateOpinion(opinionId: String)
POST    /opinionUpdateHandler                           controllers.products.OpinionController.updateOpinionHandler
GET     /opinionDelete/:opinionId                       controllers.products.OpinionController.deleteOpinion(opinionId: String)

GET     /photoCreate                                    controllers.products.PhotoController.createPhoto
POST    /photoCreateHandler                             controllers.products.PhotoController.createPhotoHandler
GET     /photoJPG/:photoId                              controllers.products.PhotoController.getPhoto(photoId: String)
GET     /photoDelete/:photoId                           controllers.products.PhotoController.deletePhoto(photoId: String)
GET     /photoUpdate/:photoId                           controllers.products.PhotoController.updatePhoto(photoId: String)
POST    /photoUpdateHandler                             controllers.products.PhotoController.updatePhotoHandler

GET     /basketCreate                                   controllers.basket.BasketController.createBasket
POST    /basketCreateHandler                            controllers.basket.BasketController.createBasketHandler
GET     /basketDelete/:basketId                         controllers.basket.BasketController.deleteBasket(basketId: String)
GET     /basketUpdate/:basketId                         controllers.basket.BasketController.updateBasket(basketId: String)
POST    /basketUpdateHandler                            controllers.basket.BasketController.updateBasketHandler

GET     /orderedProductCreate                           controllers.basket.OrderedProductsController.createOrderedProduct
POST    /orderedProductCreateHandler                    controllers.basket.OrderedProductsController.createOrderedProductHandler
GET     /orderedProductDelete/:orderedProductId         controllers.basket.OrderedProductsController.deleteOrderedProduct(orderedProductId: String)
GET     /orderedProductUpdate/:orderedProductId         controllers.basket.OrderedProductsController.updateOrderedProduct(orderedProductId: String)
POST    /orderedProductUpdateHandler                    controllers.basket.OrderedProductsController.updateOrderedProductHandler

GET     /orderCreate                                    controllers.orders.OrderController.createOrder
POST    /orderCreateHandler                             controllers.orders.OrderController.createOrderHandler
GET     /orderUpadte/:orderId                           controllers.orders.OrderController.updateOrder(orderId: String)
POST    /orderUpadteHandler                             controllers.orders.OrderController.updateOrderHandler
GET     /orderDelete/:orderId                           controllers.orders.OrderController.deleteOrder(orderId: String)